//-------------------------------------------------------------------------------------
// <auto-generated>
// </auto-generated>
//-------------------------------------------------------------------------------------
using System.CodeDom.Compiler;
using BuilderGenerator;
using System;

#nullable disable
#pragma warning disable 618 // Suppress complaints about obsolete properties.

namespace BuilderGenerator.UnitTests
{
    public partial class PersonBuilderWithInternals : BuilderGenerator.Builder<BuilderGenerator.UnitTests.Person>
    {
        /// <summary>Gets or sets the object returned by this builder.</summary>
        /// <value>The constructed object.</value>
        protected System.Lazy<BuilderGenerator.UnitTests.Person> Person { get; set; }

        public System.Lazy<string> FirstName = new System.Lazy<string>(() => default(string));
        public System.Lazy<string> InternalString = new System.Lazy<string>(() => default(string));
        public System.Lazy<string> LastName = new System.Lazy<string>(() => default(string));

        /// <summary>Initializes a new instance of the <see cref="PersonBuilderWithInternals"/> class using the provided <see cref="BuilderGenerator.UnitTests.Person" /> for the value.</summary>
        /// <param name="value">The <see cref="BuilderGenerator.UnitTests.Person" /> instance to build on.</param>
        /// <remarks>Note: <paramref name="value" /> is not simply a template. The actual instance will be remembered and returned.</remarks>
        public PersonBuilderWithInternals(BuilderGenerator.UnitTests.Person value = null)
        {
            if (value != null)
            {
                WithPerson(value);
            }
        }

        /// <summary>Populates this instance with values from the provided example.</summary>
        /// <remarks>This is a shallow clone, and does not traverse the example object creating builders for its properties.</remarks>
        public PersonBuilderWithInternals WithValuesFrom(BuilderGenerator.UnitTests.Person example)
        {
            WithFirstName(example.FirstName);
            WithInternalString(example.InternalString);
            WithLastName(example.LastName);

            return this;
        }

        public override BuilderGenerator.UnitTests.Person Build()
        {
            if (Person?.IsValueCreated != true)
            {
                Person = new System.Lazy<BuilderGenerator.UnitTests.Person>(() =>
                {
                    var result = new BuilderGenerator.UnitTests.Person
                    {
                        FirstName = FirstName.Value,
                        InternalString = InternalString.Value,
                        LastName = LastName.Value,
                    };

                    return result;
                });

                PostProcess(Person.Value);
            }

            return Person.Value;
        }

        /// <summary>Sets the object to be returned by this instance.</summary>
        /// <param name="value">The object to be returned.</param>
        /// <returns>A reference to this builder instance.</returns>
        public PersonBuilderWithInternals WithPerson(BuilderGenerator.UnitTests.Person value)
        {
            Person = new System.Lazy<BuilderGenerator.UnitTests.Person>(() => value);
            WithValuesFrom(value);

            return this;
        }

        public PersonBuilderWithInternals WithFirstName(string value)
        {
            return WithFirstName(() => value);
        }

        public PersonBuilderWithInternals WithFirstName(System.Func<string> func)
        {
            FirstName = new System.Lazy<string>(func);
            return this;
        }

        public PersonBuilderWithInternals WithoutFirstName()
        {
            FirstName = new System.Lazy<string>(() => default(string));
            return this;
        }

        public PersonBuilderWithInternals WithInternalString(string value)
        {
            return WithInternalString(() => value);
        }

        public PersonBuilderWithInternals WithInternalString(System.Func<string> func)
        {
            InternalString = new System.Lazy<string>(func);
            return this;
        }

        public PersonBuilderWithInternals WithoutInternalString()
        {
            InternalString = new System.Lazy<string>(() => default(string));
            return this;
        }

        public PersonBuilderWithInternals WithLastName(string value)
        {
            return WithLastName(() => value);
        }

        public PersonBuilderWithInternals WithLastName(System.Func<string> func)
        {
            LastName = new System.Lazy<string>(func);
            return this;
        }

        public PersonBuilderWithInternals WithoutLastName()
        {
            LastName = new System.Lazy<string>(() => default(string));
            return this;
        }
    }
}
