<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <SuppressDependenciesWhenPacking>true</SuppressDependenciesWhenPacking>
    <DevelopmentDependency>true</DevelopmentDependency>
  </PropertyGroup>
  <PropertyGroup>
    <Version>2.0.3</Version>
    <PackageId>BuilderGenerator</PackageId>
    <PackageVersion>2.0.3</PackageVersion>
    <Authors>Mel Grubb</Authors>
    <PackageLicenseFile>LICENSE.md</PackageLicenseFile>
    <PackageProjectUrl>https://melgrubb.github.io/BuilderGenerator/</PackageProjectUrl>
    <PackageReadmeFile>README.md</PackageReadmeFile>
    <PackageIcon>logo.png</PackageIcon>
    <RepositoryUrl>https://github.com/MelGrubb/BuilderGenerator</RepositoryUrl>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Description>Generates builder classes for testing and/or seed data. Please see documentation site (https://melgrubb.github.io/BuilderGenerator/) for complete details.</Description>
    <Copyright>2021 Mel Grubb</Copyright>
    <PackageTags>BDD;TDD;Testing;Builders;Code Generation;Source Generators</PackageTags>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <PackageReleaseNotes>v2.0.3
- Fixed NuGet packaging problem

v2.0.2
- Setters for base class properties rendering properly

v2.0.1
- Improved error handling

v2.0.0
- Updated to .Net 6 and IIncrementalGenerator
- Changed usage pattern from marking target classes with attributes to marking partial builder classes

v1.2.0
- Solution reorganization
- Version number synchronization
- Automated build pipeline

v1.0.0
- First major release

v0.5.0
- Replaced separate BuilderGenerator.Common assembly with a generated attribute and base class.
- NuGet package complete and working at last

v0.1.4
- Added logo
- Builder now ignores properties without setters
- NuGet package should auto-install analyzer now

v0.1.3
- Added Documentation site stub

v0.1.2
- Ignore read-only fields

v0.1.1
- Preview/Alpha release

v0.1.0
- Initial Release
    </PackageReleaseNotes>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);_AddGeneratorsToOutput</TargetsForTfmSpecificContentInPackage>
    <RepositoryType>git</RepositoryType>
  </PropertyGroup>
  <ItemGroup>
    <ProjectReference Include="..\BuilderGenerator\BuilderGenerator.csproj" PrivateAssets="All" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\..\LICENSE.md">
      <Pack>True</Pack>
      <PackagePath>
      </PackagePath>
    </None>
    <None Include="..\Images\logo.png">
      <Pack>True</Pack>
      <PackagePath>
      </PackagePath>
    </None>
  </ItemGroup>
  <ItemGroup>
    <None Update="README.md">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>
  <Target Name="_AddGeneratorsToOutput">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(OutputPath)\BuilderGenerator.dll" Pack="true" PackagePath="analyzers/dotnet/cs" Visible="false" />
    </ItemGroup>
  </Target>
</Project>